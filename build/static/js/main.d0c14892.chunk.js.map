{"version":3,"sources":["components/Flag.js","components/GuessInput.js","components/Scoreboard.js","App.js","index.js"],"names":["flagStyle","width","height","border","padding","Flag","country","className","src","flag","alt","style","formStyle","margin","btnStyle","marginLeft","borderRadius","backgroundColor","color","inputStyle","GuessInput","handleGuess","value","handleInput","gameOver","onSubmit","type","placeholder","onChange","Scoreboard","score","lives","answer","App","useState","countries","setCountries","setCountry","flagInput","setFlagInput","setScore","setLives","setAnswer","setGameOver","useEffect","axios","get","then","response","data","getRandomCountry","name","arrCountries","Math","floor","random","length","remainingCountries","filter","event","preventDefault","guess","toLowerCase","startsWith","newCountry","console","log","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0c14892.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst flagStyle = {\r\n    width: \"30vw\",\r\n    height: \"20vh\",\r\n    border: '1px solid black',\r\n    padding: '0.2rem'\r\n};\r\n\r\nexport const Flag = ({ country }) => {\r\n    if (country) {\r\n        return (\r\n            <div className=\"flag-container\">\r\n                <img src={country.flag} alt=\"No cheating!\" style={flagStyle} />\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"empty-flag-container\">\r\n                <p>Loading...</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Flag;","import React from 'react'\r\n\r\nconst formStyle = {\r\n    margin: '1rem 0',\r\n};\r\n\r\nconst btnStyle = {\r\n    padding: '0.3rem',\r\n    marginLeft: '4px',\r\n    borderRadius: '10%',\r\n    backgroundColor: 'red',\r\n    border: '0px',\r\n    color: 'white'\r\n};\r\n\r\nconst inputStyle = {\r\n    border: '1px solid black',\r\n    padding: '0.2rem'\r\n}\r\n\r\nexport const GuessInput = ({ handleGuess, value, handleInput, gameOver }) => {\r\n    if (gameOver === true) {\r\n        return (\r\n            <section>\r\n                <h3>The game is over.</h3>\r\n                {/* <button onSubmit={()=>{}}>Replay?</button> */}\r\n            </section>\r\n        )\r\n    }\r\n    \r\n    return (\r\n        <section className=\"form-container\" style={formStyle} >\r\n            <form onSubmit={handleGuess}>\r\n                <input type=\"text\" placeholder=\"Enter guess...\" value={value} onChange={handleInput} style={inputStyle} />\r\n                <button style={btnStyle} type=\"submit\"> Guess? </button>\r\n            </form>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default GuessInput;","import React from 'react'\r\n\r\nexport const Scoreboard = ({ score, lives, answer }) => {\r\n    if (lives <= 0) {\r\n        return (\r\n            <section>\r\n                <h4>You lose, flaggot!</h4>\r\n                <p>The answer was: {answer}</p>\r\n                <p>Your final score was: {score}</p>\r\n            </section>\r\n        )\r\n    }\r\n    \r\n    return (\r\n        <section>\r\n            <p>Current score: {score}</p>\r\n            <p>Remaining Lives: {lives}</p>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Scoreboard;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport Flag from './components/Flag';\nimport GuessInput from './components/GuessInput';\nimport Scoreboard from './components/Scoreboard';\n\nconst App = () => {\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState({});\n  const [flagInput, setFlagInput] = useState('');\n  const [score, setScore] = useState(0);\n  const [lives, setLives] = useState(3);\n  const [answer, setAnswer] = useState('');\n  const [gameOver, setGameOver] = useState(false);\n\n  useEffect( () => {\n    axios\n      .get('https://restcountries.eu/rest/v2/all')\n      .then( response => {\n        setCountries(response.data)\n        const country = getRandomCountry(response.data);\n        setAnswer(country.name);\n        setCountry(country);\n      });\n    }, []);\n\n  useEffect( () => {\n    if (lives <= 0) {\n      setGameOver(true);\n    }\n  }, [lives]);\n    \n  const getRandomCountry = (arrCountries) => {\n    const randomCountry = Math.floor(Math.random() * arrCountries.length);\n    return arrCountries[randomCountry];\n  }\n\n  let remainingCountries = countries.filter(country => country.name !== answer);\n\n  const handleFlagInput = (event => setFlagInput(event.target.value));\n  const handleFlagGuess = (event => {\n    event.preventDefault();\n    const guess = flagInput.toLowerCase();\n    if (guess === answer.toLowerCase() || guess.startsWith(answer.toLowerCase())) {\n      setScore(score + 1);\n      const newCountry = getRandomCountry(remainingCountries);\n      setCountry(newCountry);\n      setAnswer(newCountry.name);\n      remainingCountries = remainingCountries.filter(country => country.name !== newCountry.name);\n      console.log(answer, remainingCountries.length);\n    } else {\n      setLives(lives - 1);\n    }\n\n    setFlagInput('');\n  });\n\n\n  return (\n    <main className=\"App\">\n      <h1>The Flag Game!</h1>\n      <Flag country={country} />\n      <GuessInput handleGuess={handleFlagGuess} value={flagInput} handleInput={handleFlagInput} gameOver={gameOver} />\n      <Scoreboard score={score} lives={lives} answer={country.name} />\n    </main>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}